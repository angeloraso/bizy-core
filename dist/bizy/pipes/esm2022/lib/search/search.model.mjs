export class FuseOptions {
    isCaseSensitive;
    distance;
    findAllMatches;
    ignoreLocation;
    ignoreFieldNorm;
    includeMatches;
    includeScore;
    location;
    minMatchCharLength;
    shouldSort;
    threshold;
    useExtendedSearch;
    keys;
    constructor(options, keys) {
        // Si se desea cambiar algun valor por default, este es el lugar indicado
        if (!keys) {
            keys = [];
        }
        const defaultOptions = {
            // Se activa includeScore para poder buscar internamente en propiedades de tipo array
            includeScore: true,
            // Cuando es verdadero, la búsqueda ignorará la ubicación y la distancia, por lo que no importará en qué parte de la cadena aparezca el patrón
            ignoreLocation: true,
            // Se reduce a 0.1 el threshold (default: 0.6) para aumentar precisión en resultados
            threshold: 0.1
        };
        if (options) {
            options = { ...defaultOptions, ...options };
        }
        else {
            options = defaultOptions;
        }
        Object.assign(this, { ...options, keys: keys });
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VhcmNoLm1vZGVsLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvcGlwZXMvc3JjL2xpYi9zZWFyY2gvc2VhcmNoLm1vZGVsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWdDQSxNQUFNLE9BQU8sV0FBVztJQUN0QixlQUFlLENBQVc7SUFDMUIsUUFBUSxDQUFVO0lBQ2xCLGNBQWMsQ0FBVztJQUN6QixjQUFjLENBQVc7SUFDekIsZUFBZSxDQUFXO0lBQzFCLGNBQWMsQ0FBVztJQUN6QixZQUFZLENBQVc7SUFDdkIsUUFBUSxDQUFVO0lBQ2xCLGtCQUFrQixDQUFVO0lBQzVCLFVBQVUsQ0FBVztJQUNyQixTQUFTLENBQVU7SUFDbkIsaUJBQWlCLENBQVc7SUFDNUIsSUFBSSxDQUFnQjtJQUVwQixZQUFZLE9BQWlCLEVBQUUsSUFBb0I7UUFDakQseUVBQXlFO1FBQ3pFLElBQUksQ0FBQyxJQUFJLEVBQUU7WUFDVCxJQUFJLEdBQUcsRUFBRSxDQUFDO1NBQ1g7UUFFRCxNQUFNLGNBQWMsR0FBRztZQUNyQixxRkFBcUY7WUFDckYsWUFBWSxFQUFFLElBQUk7WUFDbEIsOElBQThJO1lBQzlJLGNBQWMsRUFBRSxJQUFJO1lBQ3BCLG9GQUFvRjtZQUNwRixTQUFTLEVBQUUsR0FBRztTQUNmLENBQUM7UUFFRixJQUFJLE9BQU8sRUFBRTtZQUNYLE9BQU8sR0FBRyxFQUFDLEdBQUcsY0FBYyxFQUFFLEdBQUcsT0FBTyxFQUFDLENBQUM7U0FDM0M7YUFBTTtZQUNMLE9BQU8sR0FBRyxjQUFjLENBQUM7U0FDMUI7UUFFRCxNQUFNLENBQUMsTUFBTSxDQUFDLElBQUksRUFBRSxFQUFDLEdBQUcsT0FBTyxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUMsQ0FBQyxDQUFDO0lBQ2hELENBQUM7Q0FDRiIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBpbnRlcmZhY2UgSUZ1c2VSZXN1bHQge1xuICBpdGVtOiBhbnk7XG4gIHJlZkluZGV4OiBudW1iZXI7XG4gIHNjb3JlOiBudW1iZXI7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgSU9wdGlvbnMge1xuICBpc0Nhc2VTZW5zaXRpdmU/OiBib29sZWFuOyAvLyBJbmRpY2Egc2kgbGFzIGNvbXBhcmFjaW9uZXMgZGViZW4gc2VyIHNlbnNpYmxlcyBhIG1hecO6c2N1bGFzIHkgbWluw7pzY3VsYXMuIChkZWY6IGZhbHNlKVxuICBpbmNsdWRlU2NvcmU/OiBib29sZWFuOyAvLyBTaSBsYSBwdW50dWFjacOzbiBkZWJlIGluY2x1aXJzZSBlbiBlbCBjb25qdW50byBkZSByZXN1bHRhZG9zLiBVbmEgcHVudHVhY2nDs24gZGUgMCBpbmRpY2EgdW5hIGNvaW5jaWRlbmNpYSBwZXJmZWN0YSwgbWllbnRyYXMgcXVlIHVuYSBwdW50dWFjacOzbiBkZSAxIGluZGljYSB1bmEgZmFsdGEgZGUgY29pbmNpZGVuY2lhIGNvbXBsZXRhLiAoZGVmOiBmYWxzZSlcbiAgaW5jbHVkZU1hdGNoZXM/OiBib29sZWFuOyAvLyBTaSBsYXMgY29pbmNpZGVuY2lhcyBkZWJlbiBpbmNsdWlyc2UgZW4gZWwgY29uanVudG8gZGUgcmVzdWx0YWRvcy4gQ3VhbmRvIGVzIHZlcmRhZGVybywgY2FkYSByZWdpc3RybyBlbiBlbCBjb25qdW50byBkZSByZXN1bHRhZG9zIGluY2x1aXLDoSBsb3Mgw61uZGljZXMgZGUgbG9zIGNhcmFjdGVyZXMgY29pbmNpZGVudGVzLiBFbiBjb25zZWN1ZW5jaWEsIHNlIHB1ZWRlbiB1c2FyIHBhcmEgcmVzYWx0YXIuKGRlZjogZmFsc2UpXG4gIHNob3VsZFNvcnQ/OiBib29sZWFuOyAvLyBTaSBzZSBkZWJlIG9yZGVuYXIgbGEgbGlzdGEgZGUgcmVzdWx0YWRvcyBwb3IgcHVudHVhY2nDs24uIChkZWY6IHRydWUpXG4gIGZpbmRBbGxNYXRjaGVzPzogYm9vbGVhbjsgLy8gQ3VhbmRvIGVzIHZlcmRhZGVybywgbGEgZnVuY2nDs24gZGUgY29pbmNpZGVuY2lhIGNvbnRpbnVhcsOhIGhhc3RhIGVsIGZpbmFsIGRlIHVuIHBhdHLDs24gZGUgYsO6c3F1ZWRhLCBpbmNsdXNvIHNpIHlhIHNlIGhhIGVuY29udHJhZG8gdW5hIGNvaW5jaWRlbmNpYSBwZXJmZWN0YSBlbiBsYSBjYWRlbmEuIChkZWY6IGZhbHNlKVxuICBtaW5NYXRjaENoYXJMZW5ndGg/OiBudW1iZXI7IC8vIFNvbG8gc2UgZGV2b2x2ZXLDoW4gbGFzIGNvaW5jaWRlbmNpYXMgY3V5YSBsb25naXR1ZCBleGNlZGEgZXN0ZSB2YWxvci4gKFBvciBlamVtcGxvLCBzaSBkZXNlYSBpZ25vcmFyIGxhcyBjb2luY2lkZW5jaWFzIGRlIHVuIHNvbG8gY2Fyw6FjdGVyIGVuIGVsIHJlc3VsdGFkbywgY29uZmlnw7pyZWxvIGVuIDIpLiAoZGVmOiAxKVxuICBsb2NhdGlvbj86IG51bWJlcjsgLy8gRGV0ZXJtaW5hIGFwcm94aW1hZGFtZW50ZSBlbiBxdcOpIHBhcnRlIGRlbCB0ZXh0byBzZSBlbmN1ZW50cmEgZWwgcGF0csOzbiBxdWUgc2UgZXNwZXJhIGVuY29udHJhci4gKGRlZjogMClcbiAgdGhyZXNob2xkPzogbnVtYmVyOyAvLyDCv0VuIHF1w6kgcHVudG8gc2UgcmluZGUgZWwgYWxnb3JpdG1vIGRlIGNvaW5jaWRlbmNpYT8gVW4gdW1icmFsIGRlIDAuMCByZXF1aWVyZSB1bmEgY29pbmNpZGVuY2lhIHBlcmZlY3RhICh0YW50byBkZSBsZXRyYXMgY29tbyBkZSB1YmljYWNpw7NuKSwgdW4gdW1icmFsIGRlIDEuMCBjb2luY2lkaXLDrWEgY29uIGN1YWxxdWllciBjb3NhLiAoZGVmOiAwLjYpXG4gIGRpc3RhbmNlPzogbnVtYmVyOyAvLyBEZXRlcm1pbmEgcXXDqSB0YW4gY2VyY2EgZGViZSBlc3RhciBsYSBjb2luY2lkZW5jaWEgZGUgbGEgdWJpY2FjacOzbiBkaWZ1c2EgKGVzcGVjaWZpY2FkYSBwb3IgbGEgdWJpY2FjacOzbikuIFVuYSBjb2luY2lkZW5jaWEgZXhhY3RhIGRlIGxldHJhcywgcXVlIGVzIGxhIGRpc3RhbmNpYSBkZSBsb3MgY2FyYWN0ZXJlcyBsZWpvcyBkZSBsYSB1YmljYWNpw7NuIGRpZnVzYSwgc2UgY29uc2lkZXJhcsOtYSBjb21vIHVuYSBmYWx0YSBkZSBjb2luY2lkZW5jaWEgY29tcGxldGEuIFVuYSBkaXN0YW5jaWEgZGUgMCByZXF1aWVyZSBxdWUgbGEgY29pbmNpZGVuY2lhIGVzdMOpIGVuIGxhIHViaWNhY2nDs24gZXhhY3RhIGVzcGVjaWZpY2FkYS4gVW5hIGRpc3RhbmNpYSBkZSAxMDAwIHJlcXVlcmlyw61hIHVuYSBjb2luY2lkZW5jaWEgcGVyZmVjdGEgcGFyYSBlc3RhciBkZW50cm8gZGUgbG9zIDgwMCBjYXJhY3RlcmVzIGRlIGxhIHViaWNhY2nDs24gcXVlIHNlIGVuY3VlbnRyYSB1dGlsaXphbmRvIHVuIHVtYnJhbCBkZSAwLDguIChkZWY6IDEwMClcbiAgdXNlRXh0ZW5kZWRTZWFyY2g/OiBib29sZWFuOyAvLyBDdWFuZG8gZXMgdmVyZGFkZXJvLCBwZXJtaXRlIGVsIHVzbyBkZSBjb21hbmRvcyBkZSBiw7pzcXVlZGEgdGlwbyBVbml4LiAoZGVmOiBmYWxzZSlcbiAgaWdub3JlTG9jYXRpb24/OiBib29sZWFuOyAvLyBDdWFuZG8gZXMgdmVyZGFkZXJvLCBsYSBiw7pzcXVlZGEgaWdub3JhcsOhIGxhIHViaWNhY2nDs24geSBsYSBkaXN0YW5jaWEsIHBvciBsbyBxdWUgbm8gaW1wb3J0YXLDoSBlbiBxdcOpIHBhcnRlIGRlIGxhIGNhZGVuYSBhcGFyZXpjYSBlbCBwYXRyw7NuLiAoZGVmOiBmYWxzZSlcbiAgaWdub3JlRmllbGROb3JtPzogYm9vbGVhbjsgLy8gQ3VhbmRvIGVzIHZlcmRhZGVybywgZWwgY8OhbGN1bG8gZGUgbGEgcHVudHVhY2nDs24gZGUgcmVsZXZhbmNpYSAodXRpbGl6YWRhIHBhcmEgbGEgY2xhc2lmaWNhY2nDs24pIGlnbm9yYXLDoSBsYSBub3JtYSBkZSBsb25naXR1ZCBkZSBjYW1wby5cbiAgLy8gZ2V0Rm4/OiBGdW5jdGlvbjsgLy8gTGEgZnVuY2nDs24gcXVlIHNlIHV0aWxpemEgcGFyYSByZWN1cGVyYXIgZWwgdmFsb3IgZGUgdW4gb2JqZXRvIGVuIGxhIHJ1dGEgcHJvcG9yY2lvbmFkYS4gRWwgdmFsb3IgcHJlZGV0ZXJtaW5hZG8gdGFtYmnDqW4gYnVzY2Fyw6EgcnV0YXMgYW5pZGFkYXMuXG4gIC8vIHNvcnRGbj86IEZ1bmN0aW9uOyAvLyBMYSBmdW5jacOzbiBhIHV0aWxpemFyIHBhcmEgb3JkZW5hciB0b2RvcyBsb3MgcmVzdWx0YWRvcy4gRWwgdmFsb3IgcHJlZGV0ZXJtaW5hZG8gc2Ugb3JkZW5hcsOhIHBvciBwdW50dWFjacOzbiBkZSByZWxldmFuY2lhIGFzY2VuZGVudGVcbn1cbi8qKlxuICogTk9UQTpcbiAqIC0gUGFyYSBjb21wcmVuZGVyIG1lam9yIGPDs21vIGxvY2F0aW9uLCB0aHJlc2hvbGQgeSBkaXN0YW5jZSBmdW5jaW9uYW4ganVudG9zLCBsZWVyIGVuIGh0dHBzOi8vZnVzZWpzLmlvL2NvbmNlcHRzL3Njb3JpbmctdGhlb3J5Lmh0bWwjc2NvcmluZy10aGVvcnlcbiAqIC0gRWwgw7puaWNvIG1vbWVudG8gZW4gcXVlIHRpZW5lIHNlbnRpZG8gZXN0YWJsZWNlciBpZ25vcmVGaWVsZE5vcm0gZW4gdHJ1ZSBlcyBjdWFuZG8gbm8gaW1wb3J0YSBjdcOhbnRvcyB0w6lybWlub3MgaGF5YSwgc2lubyBzb2xvIHF1ZSBlbCB0w6lybWlubyBkZSBjb25zdWx0YSBleGlzdGEuXG4gKi9cblxuZXhwb3J0IGludGVyZmFjZSBJRnVzZU9wdGlvbnMgZXh0ZW5kcyBJT3B0aW9ucyB7XG4gIGtleXM/OiBBcnJheTxzdHJpbmc+O1xufVxuXG5leHBvcnQgY2xhc3MgRnVzZU9wdGlvbnMgaW1wbGVtZW50cyBJRnVzZU9wdGlvbnMge1xuICBpc0Nhc2VTZW5zaXRpdmU/OiBib29sZWFuO1xuICBkaXN0YW5jZT86IG51bWJlcjtcbiAgZmluZEFsbE1hdGNoZXM/OiBib29sZWFuO1xuICBpZ25vcmVMb2NhdGlvbj86IGJvb2xlYW47XG4gIGlnbm9yZUZpZWxkTm9ybT86IGJvb2xlYW47XG4gIGluY2x1ZGVNYXRjaGVzPzogYm9vbGVhbjtcbiAgaW5jbHVkZVNjb3JlPzogYm9vbGVhbjtcbiAgbG9jYXRpb24/OiBudW1iZXI7XG4gIG1pbk1hdGNoQ2hhckxlbmd0aD86IG51bWJlcjtcbiAgc2hvdWxkU29ydD86IGJvb2xlYW47XG4gIHRocmVzaG9sZD86IG51bWJlcjtcbiAgdXNlRXh0ZW5kZWRTZWFyY2g/OiBib29sZWFuO1xuICBrZXlzOiBBcnJheTxzdHJpbmc+O1xuXG4gIGNvbnN0cnVjdG9yKG9wdGlvbnM6IElPcHRpb25zLCBrZXlzPzogQXJyYXk8c3RyaW5nPikge1xuICAgIC8vIFNpIHNlIGRlc2VhIGNhbWJpYXIgYWxndW4gdmFsb3IgcG9yIGRlZmF1bHQsIGVzdGUgZXMgZWwgbHVnYXIgaW5kaWNhZG9cbiAgICBpZiAoIWtleXMpIHtcbiAgICAgIGtleXMgPSBbXTtcbiAgICB9XG5cbiAgICBjb25zdCBkZWZhdWx0T3B0aW9ucyA9IHtcbiAgICAgIC8vIFNlIGFjdGl2YSBpbmNsdWRlU2NvcmUgcGFyYSBwb2RlciBidXNjYXIgaW50ZXJuYW1lbnRlIGVuIHByb3BpZWRhZGVzIGRlIHRpcG8gYXJyYXlcbiAgICAgIGluY2x1ZGVTY29yZTogdHJ1ZSxcbiAgICAgIC8vIEN1YW5kbyBlcyB2ZXJkYWRlcm8sIGxhIGLDunNxdWVkYSBpZ25vcmFyw6EgbGEgdWJpY2FjacOzbiB5IGxhIGRpc3RhbmNpYSwgcG9yIGxvIHF1ZSBubyBpbXBvcnRhcsOhIGVuIHF1w6kgcGFydGUgZGUgbGEgY2FkZW5hIGFwYXJlemNhIGVsIHBhdHLDs25cbiAgICAgIGlnbm9yZUxvY2F0aW9uOiB0cnVlLFxuICAgICAgLy8gU2UgcmVkdWNlIGEgMC4xIGVsIHRocmVzaG9sZCAoZGVmYXVsdDogMC42KSBwYXJhIGF1bWVudGFyIHByZWNpc2nDs24gZW4gcmVzdWx0YWRvc1xuICAgICAgdGhyZXNob2xkOiAwLjFcbiAgICB9O1xuXG4gICAgaWYgKG9wdGlvbnMpIHtcbiAgICAgIG9wdGlvbnMgPSB7Li4uZGVmYXVsdE9wdGlvbnMsIC4uLm9wdGlvbnN9O1xuICAgIH0gZWxzZSB7XG4gICAgICBvcHRpb25zID0gZGVmYXVsdE9wdGlvbnM7XG4gICAgfVxuXG4gICAgT2JqZWN0LmFzc2lnbih0aGlzLCB7Li4ub3B0aW9ucywga2V5czoga2V5c30pO1xuICB9XG59XG4iXX0=