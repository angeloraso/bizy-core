{"version":3,"file":"bizy-pipes.mjs","sources":["../../../../projects/pipes/src/lib/repeat.pipe.ts","../../../../projects/pipes/src/lib/setToArray.pipe.ts","../../../../projects/pipes/src/lib/selected.pipe.ts","../../../../projects/pipes/src/lib/orderBy.pipe.ts","../../../../projects/pipes/src/lib/reduce.pipe.ts","../../../../projects/pipes/src/lib/safe.pipe.ts","../../../../projects/pipes/src/lib/search/search.model.ts","../../../../projects/pipes/src/lib/search/search.pipe.ts","../../../../projects/pipes/src/lib/formatSeconds/formatSeconds.types.ts","../../../../projects/pipes/src/lib/formatSeconds/formatSeconds.service.ts","../../../../projects/pipes/src/lib/formatSeconds/formatSeconds.pipe.ts","../../../../projects/pipes/src/lib/average.pipe.ts","../../../../projects/pipes/src/lib/pipes.module.ts","../../../../projects/pipes/src/bizy-pipes.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'bizyRepeat'\n})\nexport class BizyRepeatPipe implements PipeTransform {\n\n  transform(value: number): number[] {\n    return Array.from({ length: value }, (_, i) => i);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'bizySetToArray'\n})\nexport class BizySetToArrayPipe implements PipeTransform {\n  transform<T>(items: Set<T>): Array<T> {\n    if (!items) {\n      return [];\n    }\n\n    return Array.from(items);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'bizySelected',\n})\nexport class BizySelectedPipe implements PipeTransform {\n  transform<T>(items: Array<T & {selected: boolean}>): Array<T & {selected: boolean}> {\n    if (!items || items.length === 0) {\n      return [];\n    }\n\n    return items.filter((_item) => _item.selected === true);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'bizyOrderBy'\n})\nexport class BizyOrderByPipe implements PipeTransform {\n  transform<T>(items: Array<T>, order: 'asc' | 'desc' | null = null, property: string = ''): Array<T> {\n    // No items\n    if (!items || !order) {\n      return items;\n    }\n\n    // Array with only one item\n    if (items.length <= 1) {\n      return items;\n    }\n\n    const sortByString = (items: Array<T>, order: 'asc' | 'desc'): Array<T> => {\n      return items.sort((a: any, b: any) => {\n        let aValue: any = a;\n        let bValue: any = b;\n        if (property) {\n          const nestedProperty = property.split('.');\n          nestedProperty.forEach(_property => {\n            aValue = aValue[_property];\n            bValue = bValue[_property];\n          });\n        }\n  \n        if ((typeof aValue === 'undefined' || aValue === null) && (typeof bValue === 'undefined' || bValue === null)) {\n          return 0;\n        }\n  \n        if ((typeof aValue === 'undefined' || aValue === null) && (typeof bValue !== 'undefined' && bValue !== null)) {\n          return order === 'desc' ? 1 : -1;\n        }\n  \n        if ((typeof aValue !== 'undefined' && aValue !== null) && (typeof bValue === 'undefined' || bValue === null) ) {\n          return order === 'desc' ? -1 : 1;\n        }\n  \n        if (aValue === bValue) {\n          return 0;\n        }\n  \n        if (order === 'desc') {\n          return (this.#removeAccentsAndDiacritics(String(aValue)).toLowerCase() > this.#removeAccentsAndDiacritics(String(bValue)).toLowerCase() ? -1 : 1);\n        }\n  \n        return (this.#removeAccentsAndDiacritics(String(bValue)).toLowerCase() > this.#removeAccentsAndDiacritics(String(aValue)).toLowerCase() ? -1 : 1);\n      });\n    }\n\n    const sortByNumber = (items: Array<T>, order: 'asc' | 'desc'): Array<T> => {\n      if (order === 'asc') {\n        return items.sort((a, b) => Number(getValue(a)) - Number(getValue(b)));\n      } else {\n        return items.sort((a, b) => Number(getValue(b)) - Number(getValue(a)));\n      }\n    }\n\n    const sortByDate = (items: Array<T>, order: 'asc' | 'desc'): Array<T> => {\n      return items.sort((a, b) =>  {\n        const aDate = parseDateString(getValue(a) as string)\n        const bDate = parseDateString(getValue(b) as string)\n        return order === 'asc' ? aDate.getTime() -  bDate.getTime() : bDate.getTime() -  aDate.getTime()\n      });\n    }\n\n    const isDate = (value: string) => {\n      const ddMMYYYYhhmmss =  /^\\d{1,2}\\/\\d{1,2}\\/\\d{4}( \\d{1,2}:\\d{1,2}(:\\d{1,2})?)?$/;\n      return ddMMYYYYhhmmss.test(value);\n    }\n  \n    const parseDateString = (value: string) => {\n      const [datePart, timePart] = value.split(' ');\n      const separator = value.includes('/') ? '/' : '-';\n  \n      const [day, month, year] = datePart.split(separator).map(Number);\n  \n      let hours = 0, minutes = 0, seconds = 0;\n  \n      if (timePart) {\n          const [hourStr, minuteStr, secondStr] = timePart.split(':').map(Number);\n          hours = isNaN(hourStr) ? 0 : hourStr;\n          minutes = isNaN(minuteStr) ? 0 : minuteStr;\n          seconds = isNaN(secondStr) ? 0 : secondStr;\n      }\n  \n      return new Date(year, month - 1, day, hours, minutes, seconds);\n    }\n\n    const getValue = (item: T) => {\n      let value = item;\n      const nestedProperty = property.split('.');\n\n      for (let i = 0; i < nestedProperty.length; i++) {\n        const property = nestedProperty[i];\n        if (!property || typeof value[property] === 'undefined' || value[property] === null) {\n          value = null;\n          break;\n        }\n\n        value = value[property];\n      }\n\n      return value;\n    }\n\n    let output: Array<T> = [...items];\n\n    if (property === '') {\n      if (typeof output[0] === 'number' && !isNaN(output[0])) {\n        return sortByNumber(output, order);\n      } else if (isDate(output[0] as string)) {\n        return sortByDate(output, order);\n      } else {\n        return sortByString(output, order);\n      }\n    }\n\n    const index = output.findIndex(_item => {\n      const value = getValue(_item);\n      return typeof value !== 'undefined' && value !== null;\n    });\n\n    if (index === -1) {\n      return output;\n    }\n\n\n    const value = getValue(output[index]);\n    if (typeof value === 'number' && !isNaN(value)) {\n      return sortByNumber(output, order);\n    } else if (isDate(value as string)) {\n      return sortByDate(output, order);\n    } else {\n      return sortByString(output, order);\n    }\n  }\n\n  #removeAccentsAndDiacritics(search: string): string {\n    if (!search) {\n      return '';\n    }\n\n    return search.normalize('NFD')!.replace(/[\\u0300-\\u036f]/g, '');\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'bizyReduce'\n})\nexport class BizyReducePipe implements PipeTransform {\n  transform(items: Array<unknown>, key: string, fixedTo: number = 2): number {\n    if (!items || items.length === 0) {\n      return 0;\n    }\n\n    if (!key) {\n      const reduce = (<Array<number>>items).reduce((acc, value) => acc + value, 0);\n      return Number(reduce.toFixed(fixedTo));\n    }\n\n    const reduce = (<Array<number>>items.map(_d => _d[key])).reduce((acc, value) => acc + value, 0);\n\n    return Number(reduce.toFixed(fixedTo));\n  }\n}\n","import { Inject, Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl, SafeScript, SafeStyle, SafeUrl } from '@angular/platform-browser';\n\n@Pipe({\n  name: 'bizySafe'\n})\nexport class BizySafePipe implements PipeTransform {\n  constructor(@Inject(DomSanitizer) private sanitizer: DomSanitizer) {}\n\n  public transform(value: any, type: string): SafeHtml | SafeStyle | SafeScript | SafeUrl | SafeResourceUrl {\n    switch (type) {\n      case 'html': return this.sanitizer.bypassSecurityTrustHtml(value);\n      case 'style': return this.sanitizer.bypassSecurityTrustStyle(value);\n      case 'script': return this.sanitizer.bypassSecurityTrustScript(value);\n      case 'url': return this.sanitizer.bypassSecurityTrustUrl(value);\n      case 'resourceUrl': return this.sanitizer.bypassSecurityTrustResourceUrl(value);\n      default: throw new Error(`Invalid safe type specified: ${type}`);\n    }\n  }\n}\n","export interface IFuseResult {\n  item: any;\n  refIndex: number;\n  score: number;\n}\n\nexport interface IOptions {\n  isCaseSensitive?: boolean; // Indica si las comparaciones deben ser sensibles a mayúsculas y minúsculas. (def: false)\n  includeScore?: boolean; // Si la puntuación debe incluirse en el conjunto de resultados. Una puntuación de 0 indica una coincidencia perfecta, mientras que una puntuación de 1 indica una falta de coincidencia completa. (def: false)\n  includeMatches?: boolean; // Si las coincidencias deben incluirse en el conjunto de resultados. Cuando es verdadero, cada registro en el conjunto de resultados incluirá los índices de los caracteres coincidentes. En consecuencia, se pueden usar para resaltar.(def: false)\n  shouldSort?: boolean; // Si se debe ordenar la lista de resultados por puntuación. (def: true)\n  findAllMatches?: boolean; // Cuando es verdadero, la función de coincidencia continuará hasta el final de un patrón de búsqueda, incluso si ya se ha encontrado una coincidencia perfecta en la cadena. (def: false)\n  minMatchCharLength?: number; // Solo se devolverán las coincidencias cuya longitud exceda este valor. (Por ejemplo, si desea ignorar las coincidencias de un solo carácter en el resultado, configúrelo en 2). (def: 1)\n  location?: number; // Determina aproximadamente en qué parte del texto se encuentra el patrón que se espera encontrar. (def: 0)\n  threshold?: number; // ¿En qué punto se rinde el algoritmo de coincidencia? Un umbral de 0.0 requiere una coincidencia perfecta (tanto de letras como de ubicación), un umbral de 1.0 coincidiría con cualquier cosa. (def: 0.6)\n  distance?: number; // Determina qué tan cerca debe estar la coincidencia de la ubicación difusa (especificada por la ubicación). Una coincidencia exacta de letras, que es la distancia de los caracteres lejos de la ubicación difusa, se consideraría como una falta de coincidencia completa. Una distancia de 0 requiere que la coincidencia esté en la ubicación exacta especificada. Una distancia de 1000 requeriría una coincidencia perfecta para estar dentro de los 800 caracteres de la ubicación que se encuentra utilizando un umbral de 0,8. (def: 100)\n  useExtendedSearch?: boolean; // Cuando es verdadero, permite el uso de comandos de búsqueda tipo Unix. (def: false)\n  ignoreLocation?: boolean; // Cuando es verdadero, la búsqueda ignorará la ubicación y la distancia, por lo que no importará en qué parte de la cadena aparezca el patrón. (def: false)\n  ignoreFieldNorm?: boolean; // Cuando es verdadero, el cálculo de la puntuación de relevancia (utilizada para la clasificación) ignorará la norma de longitud de campo.\n  // getFn?: Function; // La función que se utiliza para recuperar el valor de un objeto en la ruta proporcionada. El valor predeterminado también buscará rutas anidadas.\n  // sortFn?: Function; // La función a utilizar para ordenar todos los resultados. El valor predeterminado se ordenará por puntuación de relevancia ascendente\n}\n/**\n * NOTA:\n * - Para comprender mejor cómo location, threshold y distance funcionan juntos, leer en https://fusejs.io/concepts/scoring-theory.html#scoring-theory\n * - El único momento en que tiene sentido establecer ignoreFieldNorm en true es cuando no importa cuántos términos haya, sino solo que el término de consulta exista.\n */\n\nexport interface IFuseOptions extends IOptions {\n  keys?: Array<string>;\n}\n\nexport class FuseOptions implements IFuseOptions {\n  isCaseSensitive?: boolean;\n  distance?: number;\n  findAllMatches?: boolean;\n  ignoreLocation?: boolean;\n  ignoreFieldNorm?: boolean;\n  includeMatches?: boolean;\n  includeScore?: boolean;\n  location?: number;\n  minMatchCharLength?: number;\n  shouldSort?: boolean;\n  threshold?: number;\n  useExtendedSearch?: boolean;\n  keys: Array<string>;\n\n  constructor(options: IOptions, keys?: Array<string>) {\n    // Si se desea cambiar algun valor por default, este es el lugar indicado\n    if (!keys) {\n      keys = [];\n    }\n\n    const defaultOptions = {\n      // Se activa includeScore para poder buscar internamente en propiedades de tipo array\n      includeScore: true,\n      // Cuando es verdadero, la búsqueda ignorará la ubicación y la distancia, por lo que no importará en qué parte de la cadena aparezca el patrón\n      ignoreLocation: true,\n      // Se reduce a 0.3 el threshold (default: 0.6) para aumentar precisión en resultados\n      threshold: 0.3\n    };\n\n    if (options) {\n      options = {...defaultOptions, ...options};\n    } else {\n      options = defaultOptions;\n    }\n\n    Object.assign(this, {...options, keys: keys});\n  }\n}\n","import {IFuseOptions, IFuseResult, FuseOptions} from './search.model';\nimport {Pipe, PipeTransform} from '@angular/core';\nimport Fuse from 'fuse.js';\n@Pipe({\n  name: 'bizySearch'\n})\nexport class BizySearchPipe implements PipeTransform {\n  fuseOptions: IFuseOptions;\n  fuse: Fuse<any>;\n  items: Array<unknown>;\n\n  readonly perfectMatch = {\n    threshold: 0.0\n  };\n\n  transform<T>(\n    items: Array<T>,\n    search: string | number | Array<string | number>,\n    keys?: string | Array<string>,\n    options?: IFuseOptions\n  ): Array<T> {\n    if (typeof search === 'undefined' || search === null || search === '' || (Array.isArray(search) && search.length === 0)) {\n      return items;\n    }\n\n    if (keys && !Array.isArray(keys)) {\n      keys = [keys];\n    } else if (!keys) {\n      keys = []\n    }\n\n    if (!Array.isArray(search)) {\n      search = [this.#removeAccentsAndDiacritics(String(search))];\n    } else {\n      search = search.map(_search => this.#removeAccentsAndDiacritics(String(_search)))\n    }\n\n    let output: Array<T> = items;\n    // Remove empty items\n    search = search.filter(n => n);\n    search.forEach(_keyword => {\n      // Apply perfect match if \"search\" is a number or is an email\n      const searchIsText = isNaN(Number(_keyword)) && !String(_keyword).includes('@');\n\n      if (!searchIsText) {\n        this.fuseOptions = new FuseOptions({...options, ...this.perfectMatch}, keys as Array<string>);\n        this.fuse = new Fuse(output, this.fuseOptions);\n      } else {\n        this.fuseOptions = new FuseOptions(options!, keys as Array<string>);\n        this.fuse = new Fuse(output, this.fuseOptions);\n      }\n\n      const fuseResult = this.fuse.search(String(_keyword)) as Array<IFuseResult>;\n      // Get each fuse result item\n      output = fuseResult.map(match => match.item);\n    });\n    return output;\n  }\n\n  #removeAccentsAndDiacritics(search: string): string {\n    if (!search) {\n      return '';\n    }\n\n    return search.normalize('NFD')!.replace(/[\\u0300-\\u036f]/g, '');\n  }\n}\n","export enum BIZY_FORMAT_SECONDS_LANGUAGE {\n  SPANISH = 'es',\n  ENGLISH = 'en',\n}\n\nexport enum BIZY_FORMAT_SECONDS_FORMAT {\n  DATE_TIME = 'date-time',\n  TIME = 'time',\n}\n","import { Injectable } from '@angular/core';\nimport { BIZY_FORMAT_SECONDS_FORMAT, BIZY_FORMAT_SECONDS_LANGUAGE } from './formatSeconds.types';\n\n@Injectable()\nexport class BizyFormatSecondsService {\n  #options: {\n    language: BIZY_FORMAT_SECONDS_LANGUAGE,\n    format: BIZY_FORMAT_SECONDS_FORMAT\n  } = {\n    language: BIZY_FORMAT_SECONDS_LANGUAGE.SPANISH,\n    format: BIZY_FORMAT_SECONDS_FORMAT.TIME\n  }\n\n  getOptions() {\n    return this.#options;\n  }\n\n  setOptions(options: {language?: BIZY_FORMAT_SECONDS_LANGUAGE, format?: BIZY_FORMAT_SECONDS_FORMAT}) {\n    if (options && options.language) {\n      this.#options.language = options.language;\n    }\n\n    if (options && options.format) {\n      this.#options.format = options.format;\n    }\n  }\n}","import { Inject, Pipe, PipeTransform } from '@angular/core';\nimport { BIZY_FORMAT_SECONDS_FORMAT, BIZY_FORMAT_SECONDS_LANGUAGE } from './formatSeconds.types';\nimport { BizyFormatSecondsService } from './formatSeconds.service';\n\n@Pipe({\n  name: 'bizyFormatSeconds'\n})\nexport class BizyFormatSecondsPipe implements PipeTransform {\n\n    constructor(@Inject(BizyFormatSecondsService) private bizyFormatSecondsService: BizyFormatSecondsService) {}\n\n    transform(seconds: number, options?: {format: BIZY_FORMAT_SECONDS_FORMAT, language: BIZY_FORMAT_SECONDS_LANGUAGE}): string {\n        if (!seconds) {\n            return '00:00:00';\n        }\n\n        const regex = /^-?\\d+(\\.\\d+)?$/;\n        const isNumber = regex.test(String(seconds).toLowerCase());\n        if (!isNumber || seconds <= 0) {\n            return '00:00:00';\n        } \n\n        const defaultOptions = this.bizyFormatSecondsService.getOptions();\n\n        const language = options?.language ?? defaultOptions.language;\n        const format = options?.format ?? defaultOptions.format;\n\n        const DAY = language === BIZY_FORMAT_SECONDS_LANGUAGE.SPANISH ? 'Día' : 'Day';\n        const DAYS = language === BIZY_FORMAT_SECONDS_LANGUAGE.SPANISH ? 'Días' : 'Days';\n        const MONTH = language === BIZY_FORMAT_SECONDS_LANGUAGE.SPANISH ? 'Mes' : 'Month';\n        const MONTHS = language === BIZY_FORMAT_SECONDS_LANGUAGE.SPANISH ? 'Meses' : 'Months';\n        const YEAR = language === BIZY_FORMAT_SECONDS_LANGUAGE.SPANISH ? 'Año' : 'Year';\n        const YEARS = language === BIZY_FORMAT_SECONDS_LANGUAGE.SPANISH ? 'Años' : 'Years';\n\n        let _seconds = Number(seconds);\n\n        const SECONDS_IN_YEAR = 365.25 * 24 * 3600;\n        const SECONDS_IN_MONTH = 30.44 * 24 * 3600;\n        const SECONDS_IN_DAY = 24 * 3600;\n        const SECONDS_IN_HOUR = 3600;\n        const SECONDS_IN_MINUTE = 60;\n\n        if (format === BIZY_FORMAT_SECONDS_FORMAT.DATE_TIME) {\n            const years = Math.floor(_seconds / SECONDS_IN_YEAR);\n            _seconds %= SECONDS_IN_YEAR;\n            const months = Math.floor(_seconds / SECONDS_IN_MONTH);\n            _seconds %= SECONDS_IN_MONTH;\n            const days = Math.floor(_seconds / SECONDS_IN_DAY);\n            _seconds %= SECONDS_IN_DAY;\n            const hours = Math.floor(_seconds / SECONDS_IN_HOUR);\n            _seconds %= SECONDS_IN_HOUR;\n            const minutes = Math.floor(_seconds / SECONDS_IN_MINUTE);\n            _seconds %= SECONDS_IN_MINUTE;\n    \n            const parts: Array<string> = [];\n            if (years > 0) {\n                parts.push(years + (years === 1 ? ` ${YEAR}` : ` ${YEARS}`));\n            }\n    \n            if (months > 0) {\n                parts.push(months + (months === 1 ? ` ${MONTH}` : ` ${MONTHS}`));\n            }\n    \n            if (days > 0) {\n                parts.push(days + (days === 1 ? ` ${DAY}` : ` ${DAYS}`));\n            }\n\n            parts.push(`${hours < 10 ? '0' + hours : hours}:${minutes < 10 ? '0' + minutes : minutes}:${_seconds < 10 ? '0' + Math.trunc(_seconds) : Math.trunc(_seconds)}`);\n            return parts.join(' ');\n        } else {\n            const hours = Math.floor(_seconds / SECONDS_IN_HOUR);\n            _seconds %= SECONDS_IN_HOUR;\n            const minutes = Math.floor(_seconds / SECONDS_IN_MINUTE);\n            _seconds %= SECONDS_IN_MINUTE;\n    \n            const parts: Array<string> = [];\n            parts.push(`${hours < 10 ? '0' + hours : hours}:${minutes < 10 ? '0' + minutes : minutes}:${_seconds < 10 ? '0' + Math.trunc(_seconds) : Math.trunc(_seconds)}`);\n            return parts.join(' ');\n        }\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'bizyAverage'\n})\nexport class BizyAveragePipe implements PipeTransform {\n  transform(items: Array<unknown>, key: string, fixedTo: number = 2): number {\n    if (!items || items.length === 0) {\n      return 0;\n    }\n\n    if (!key) {\n      const reduce = (<Array<number>>items).reduce((acc, value) => acc + value, 0);\n      return Number((reduce / items.length).toFixed(fixedTo));\n    }\n\n    const reduce = (<Array<number>>items.map(_d => _d[key])).reduce((acc, value) => acc + value, 0);\n    return Number((reduce / items.length).toFixed(fixedTo));\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { BizyOrderByPipe } from './orderBy.pipe';\nimport { BizyReducePipe } from './reduce.pipe';\nimport { BizySafePipe } from './safe.pipe';\nimport { BizySearchPipe } from './search';\nimport { BizySelectedPipe } from './selected.pipe';\nimport { BizySetToArrayPipe } from './setToArray.pipe';\nimport { BizyFormatSecondsPipe, BizyFormatSecondsService } from './formatSeconds';\nimport { BizyAveragePipe } from './average.pipe';\nimport { BizyRepeatPipe } from './repeat.pipe';\n\nconst PIPES: Array<any> = [\n  BizyOrderByPipe,\n  BizyReducePipe,\n  BizySafePipe,\n  BizySearchPipe,\n  BizySelectedPipe,\n  BizySetToArrayPipe,\n  BizyFormatSecondsPipe,\n  BizyAveragePipe,\n  BizyRepeatPipe\n];\n@NgModule({\n  declarations: PIPES,\n  exports: PIPES,\n  providers: PIPES.concat([BizyFormatSecondsService])\n})\nexport class BizyPipesModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}